@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// @mixin box-shadow($top, $left, $blur, $color, $inset: false) {
//    @if $inset{
//     -webkit-box-shadow: inset $top $left $blur $color;
//     -moz-box-shadow: inset $top $left $blur $color;
//     box-shadow: inset $top $left $blur $color;
//   }
//   @else {
//     -webkit-box-shadow: $top $left $blur $color;
//     -moz-box-shadow: $top $left $blur $color;
//     box-shadow: $top $left $blur $color;
//   }
// }




// =============== border-radius ===============
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}




@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}



// =============== border-radius ===============
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}






// =============== Box shadow ===============
@mixin box-shadow($box-shadow) {
  -webkit-box-shadow: $box-shadow ;
  box-shadow: $box-shadow;
}





// =============== Retina ===============
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {                             
            background-image: url($image);          // on retina, use image that's scaled by 2
            background-size: $width $height;        // @include image-2x("url", 100px, 25px);
         
          }
}





// =============== Transformation ===============
@mixin transform($transforms) {
  -webkit-transform: $transforms;
     -moz-transform: $transforms;
      -ms-transform: $transforms;
       -o-transform: $transforms;
          transform: $transforms;
}





// =============== Single side border-radius ===============
@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}
@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
}
@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}
@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
}

// =============== Transition ===============
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
@mixin transition-property($property...) {
  -webkit-transition-property: $property;
  -moz-transition-property: $property;
  -o-transition-property: $property;
  transition-property: $property;
}
@mixin transition-duration($duration...) {
  -webkit-transition-property: $duration;
  -moz-transition-property: $duration;
  -o-transition-property: $duration;
  transition-property: $duration;
}
@mixin transition-timing-function($timing...) {
  -webkit-transition-timing-function: $timing;
  -moz-transition-timing-function: $timing;
  -o-transition-timing-function: $timing;
  transition-timing-function: $timing;
}
@mixin transition-delay($delay...) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  transition-delay: $delay;
}
